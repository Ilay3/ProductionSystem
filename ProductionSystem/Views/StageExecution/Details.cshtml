@model ProductionSystem.Models.StageExecution

@{
    ViewData["Title"] = "Выполнение этапа";
}

<div class="row">
    <div class="col-md-12">
        <h2>@ViewData["Title"]</h2>

        <div class="row">
            <div class="col-md-8">
                <div class="card">
                    <div class="card-header">
                        <h5>Информация об этапе</h5>
                    </div>
                    <div class="card-body">
                        <dl class="row">
                            <dt class="col-sm-3">Деталь</dt>
                            <dd class="col-sm-9">@Model.RouteStage.SubBatch.ProductionOrder.Detail.Name</dd>

                            <dt class="col-sm-3">Задание</dt>
                            <dd class="col-sm-9">@Model.RouteStage.SubBatch.ProductionOrder.Number</dd>

                            <dt class="col-sm-3">Подпартия</dt>
                            <dd class="col-sm-9">@Model.RouteStage.SubBatch.BatchNumber</dd>

                            <dt class="col-sm-3">Номер этапа</dt>
                            <dd class="col-sm-9">@Model.RouteStage.StageNumber</dd>

                            <dt class="col-sm-3">Название</dt>
                            <dd class="col-sm-9">@Model.RouteStage.Name</dd>

                            <dt class="col-sm-3">Тип</dt>
                            <dd class="col-sm-9">
                                @if (Model.RouteStage.StageType == "Changeover")
                                {
                                    <span class="badge" style="background-color: #FF9800; color: white;">Переналадка</span>
                                }
                                else
                                {
                                    <span class="badge bg-info">Операция</span>
                                }
                            </dd>

                            @if (Model.RouteStage.Operation != null)
                            {
                                <dt class="col-sm-3">Операция</dt>
                                <dd class="col-sm-9">@Model.RouteStage.Operation.Name</dd>
                            }

                            @if (Model.Machine != null)
                            {
                                <dt class="col-sm-3">Станок</dt>
                                <dd class="col-sm-9">@Model.Machine.Name (@Model.Machine.MachineType?.Name ?? "неизвестный тип")</dd>
                            }

                            <dt class="col-sm-3">Количество</dt>
                            <dd class="col-sm-9">@Model.RouteStage.Quantity</dd>

                            <dt class="col-sm-3">Оператор</dt>
                            <dd class="col-sm-9">@(Model.Operator ?? "Не указан")</dd>
                        </dl>
                    </div>
                </div>

                <div class="card mt-3">
                    <div class="card-header">
                        <h5>Время выполнения</h5>
                    </div>
                    <div class="card-body">
                        <p><strong>Плановое время:</strong> @Model.RouteStage.PlannedTime.ToString("F2") ч</p>
                        @if (Model.StartedAt.HasValue)
                        {
                            <p><strong>Начато:</strong> @Model.StartedAt.Value.ToString("dd.MM.yyyy HH:mm:ss")</p>
                        }

                        @if (Model.PausedAt.HasValue && Model.Status == "Paused")
                        {
                            <p><strong>На паузе с:</strong> @Model.PausedAt.Value.ToString("dd.MM.yyyy HH:mm:ss")</p>
                        }

                        @if (Model.PauseTime > 0)
                        {
                            <p><strong>Общее время пауз:</strong> @Model.PauseTime.Value.ToString("F2") ч</p>
                        }

                        @if (Model.CompletedAt.HasValue)
                        {
                            <p>
                                <strong>Фактическое время:</strong>
                                @{
                                    var actualTime = Model.ActualTime ?? 0;
                                    var plannedTime = Model.RouteStage.PlannedTime;
                                    var isExceeded = actualTime > plannedTime;
                                    var exceededTime = actualTime - plannedTime;
                                }
                                @if (isExceeded)
                                {
                                    <span class="text-danger">@actualTime.ToString("F2") ч</span>
                                    <small class="text-muted">(план: @plannedTime.ToString("F2") ч, превышение: @exceededTime.ToString("F2") ч)</small>
                                }
                                else
                                {
                                    <span class="text-success">@actualTime.ToString("F2") ч</span>
                                    <small class="text-muted">(план: @plannedTime.ToString("F2") ч)</small>
                                }
                            </p>

                            <p><strong>Завершено:</strong> @Model.CompletedAt.Value.ToString("dd.MM.yyyy HH:mm:ss")</p>

                            @if (!string.IsNullOrEmpty(Model.TimeExceededReason))
                            {
                                <p><strong>Причина превышения:</strong> <span class="text-warning">@Model.TimeExceededReason</span></p>
                            }
                        }
                        else if (ViewBag.CurrentTime != null)
                        {
                            var currentTimeValue = (double)ViewBag.CurrentTime;
                            var plannedTime = (double)Model.RouteStage.PlannedTime;
                            var percentage = Math.Min(100, (currentTimeValue / plannedTime) * 100);

                            <p><strong>Текущее время:</strong> @currentTimeValue.ToString("F2") ч из @plannedTime.ToString("F2") ч</p>
                            <div class="progress mb-3">
                                <div class="progress-bar @(percentage > 100 ? "bg-danger" : "bg-primary")"
                                     role="progressbar"
                                     style="width: @percentage%;"
                                     aria-valuenow="@percentage"
                                     aria-valuemin="0"
                                     aria-valuemax="100">
                                    @percentage.ToString("F0")%
                                </div>
                            </div>

                            @if (percentage > 100)
                            {
                                <p class="text-danger">
                                    <i class="fas fa-exclamation-triangle"></i>
                                    Плановое время превышено на @((currentTimeValue - plannedTime).ToString("F2")) ч
                                    (@((percentage - 100).ToString("F0"))%)
                                </p>
                            }
                        }
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="card">
                    <div class="card-header">
                        <h5>Управление</h5>
                    </div>
                    <div class="card-body">
                        <p>
                            <strong>Текущий статус:</strong>
                            <span class="badge @(GetStatusBadgeClass(Model.Status))">@Model.Status</span>
                        </p>

                        @if (Model.Status == "Started")
                        {
                            <form asp-action="PauseStage" method="post" style="margin-bottom: 10px;">
                                <input type="hidden" name="id" value="@Model.Id" />
                                <button type="submit" class="btn btn-warning btn-block">
                                    <i class="fas fa-pause"></i> Пауза
                                </button>
                            </form>

                            <button type="button" class="btn btn-success btn-block" data-bs-toggle="modal" data-bs-target="#completeModal">
                                <i class="fas fa-check"></i> Завершить
                            </button>
                        }
                        else if (Model.Status == "Paused")
                        {
                            @if (ViewBag.CanResume == true)
                            {
                                <form asp-action="ResumeStage" method="post" style="margin-bottom: 10px;">
                                    <input type="hidden" name="id" value="@Model.Id" />
                                    <button type="submit" class="btn btn-primary btn-block">
                                        <i class="fas fa-play"></i> Возобновить
                                    </button>
                                </form>
                            }
                            else
                            {
                                <div class="alert alert-warning">
                                    <i class="fas fa-exclamation-triangle"></i>
                                    Невозможно возобновить: станок занят другой операцией
                                </div>
                            }

                            <button type="button" class="btn btn-success btn-block" data-bs-toggle="modal" data-bs-target="#completeModal">
                                <i class="fas fa-check"></i> Завершить
                            </button>
                        }
                        else if (Model.Status == "Completed")
                        {
                            <div class="alert alert-success" role="alert">
                                <i class="fas fa-check-circle"></i> Этап завершен
                            </div>

                            <a asp-action="EditTime" asp-route-id="@Model.Id" class="btn btn-warning btn-block">
                                <i class="fas fa-edit"></i> Редактировать время
                            </a>
                        }

                        <div class="mt-3">
                            <a asp-action="Index" asp-controller="RouteStages" asp-route-subBatchId="@Model.RouteStage.SubBatchId"
                               class="btn btn-secondary btn-block">
                                <i class="fas fa-arrow-left"></i> Назад к маршруту
                            </a>
                        </div>
                    </div>
                </div>

                @if (!string.IsNullOrEmpty(Model.Notes))
                {
                    <div class="card mt-3">
                        <div class="card-header">
                            <h5>Примечания</h5>
                        </div>
                        <div class="card-body">
                            <p style="white-space: pre-line;">@Model.Notes</p>
                        </div>
                    </div>
                }
            </div>
        </div>

        <div class="card mt-3">
            <div class="card-header">
                <h5>История выполнения</h5>
            </div>
            <div class="card-body">
                @if (Model.ExecutionLogs.Any())
                {
                    <table class="table table-sm">
                        <thead>
                            <tr>
                                <th>Время</th>
                                <th>Действие</th>
                                <th>Оператор</th>
                                <th>Заметки</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var log in Model.ExecutionLogs.OrderByDescending(l => l.Timestamp))
                            {
                                <tr>
                                    <td>@log.Timestamp.ToString("dd.MM.yyyy HH:mm:ss")</td>
                                    <td>
                                        <span class="badge @(GetLogActionBadgeClass(log.Action))">
                                            @GetDisplayNameForAction(log.Action)
                                        </span>
                                    </td>
                                    <td>@log.Operator</td>
                                    <td>@log.Notes</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <p>История пуста</p>
                }
            </div>
        </div>
    </div>
</div>

<!-- Modal для завершения -->
<div class="modal fade" id="completeModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-action="CompleteStage" method="post">
                <input type="hidden" name="id" value="@Model.Id" />
                <div class="modal-header">
                    <h5 class="modal-title">Завершение этапа</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label for="notes">Заметки (необязательно)</label>
                        <textarea name="notes" class="form-control" rows="3" placeholder="Комментарии к выполнению..."></textarea>
                    </div>

                    @if (ViewBag.CurrentTime != null && (double)ViewBag.CurrentTime > (double)Model.RouteStage.PlannedTime)
                    {
                        var currentTime = (double)ViewBag.CurrentTime;
                        var plannedTime = (double)Model.RouteStage.PlannedTime;
                        var exceededTime = currentTime - plannedTime;

                        <div class="alert alert-warning mt-3">
                            <strong>Превышение планового времени!</strong><br>
                            Плановое: @plannedTime.ToString("F2") ч<br>
                            Текущее: @currentTime.ToString("F2") ч<br>
                            Превышение: @exceededTime.ToString("F2") ч
                        </div>

                        <div class="form-group">
                            <label for="timeExceededReason">Причина превышения времени</label>
                            <select name="timeExceededReason" class="form-control" required>
                                <option value="">-- Выберите причину --</option>
                                <option value="Сложность обработки">Сложность обработки</option>
                                <option value="Износ инструмента">Износ инструмента</option>
                                <option value="Проблемы с материалом">Проблемы с материалом</option>
                                <option value="Неисправность станка">Неисправность станка</option>
                                <option value="Недостаток опыта оператора">Недостаток опыта оператора</option>
                                <option value="Изменение технологии">Изменение технологии</option>
                                <option value="Другое">Другое</option>
                            </select>
                        </div>
                    }
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Отмена</button>
                    <button type="submit" class="btn btn-success">Завершить</button>
                </div>
            </form>
        </div>
    </div>
</div>

@functions {
    private string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "Pending" => "bg-secondary",
            "Started" => "bg-primary",
            "Paused" => "bg-warning",
            "Completed" => "bg-success",
            "Cancelled" => "bg-danger",
            _ => "bg-secondary"
        };
    }

    private string GetLogActionBadgeClass(string action)
    {
        return action switch
        {
            "Started" => "bg-primary",
            "Paused" => "bg-warning",
            "Resumed" => "bg-info",
            "Completed" => "bg-success",
            "TimeModified" => "bg-secondary",
            "Cancelled" => "bg-danger",
            _ => "bg-secondary"
        };
    }

    private string GetDisplayNameForAction(string action)
    {
        return action switch
        {
            "Started" => "Запуск",
            "Paused" => "Пауза",
            "Resumed" => "Возобновление",
            "Completed" => "Завершение",
            "TimeModified" => "Редактирование времени",
            "Cancelled" => "Отмена",
            _ => action
        };
    }
}