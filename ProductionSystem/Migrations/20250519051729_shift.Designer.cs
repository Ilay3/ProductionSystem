// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ProductionSystem.Data;

#nullable disable

namespace ProductionSystem.Migrations
{
    [DbContext(typeof(ProductionContext))]
    [Migration("20250519051729_shift")]
    partial class shift
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ProductionSystem.Models.Changeover", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ChangeoverTime")
                        .HasColumnType("decimal(6,4)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("FromDetailId")
                        .HasColumnType("integer");

                    b.Property<int>("MachineId")
                        .HasColumnType("integer");

                    b.Property<int?>("MachineId1")
                        .HasColumnType("integer");

                    b.Property<int>("ToDetailId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FromDetailId");

                    b.HasIndex("MachineId1");

                    b.HasIndex("ToDetailId");

                    b.HasIndex("MachineId", "FromDetailId", "ToDetailId")
                        .IsUnique();

                    b.ToTable("Changeovers");
                });

            modelBuilder.Entity("ProductionSystem.Models.Detail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("Details");
                });

            modelBuilder.Entity("ProductionSystem.Models.ExecutionLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Operator")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("StageExecutionId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("StageExecutionId");

                    b.ToTable("ExecutionLogs");
                });

            modelBuilder.Entity("ProductionSystem.Models.Machine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("InventoryNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("MachineTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Priority")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("InventoryNumber")
                        .IsUnique();

                    b.HasIndex("MachineTypeId");

                    b.ToTable("Machines");
                });

            modelBuilder.Entity("ProductionSystem.Models.MachineType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("MachineTypes");
                });

            modelBuilder.Entity("ProductionSystem.Models.Operation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("DetailId")
                        .HasColumnType("integer");

                    b.Property<int>("MachineTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("OperationNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<decimal>("TimePerPiece")
                        .HasColumnType("decimal(8,4)");

                    b.HasKey("Id");

                    b.HasIndex("MachineTypeId");

                    b.HasIndex("DetailId", "OperationNumber")
                        .IsUnique();

                    b.ToTable("Operations");
                });

            modelBuilder.Entity("ProductionSystem.Models.ProductionOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("DetailId")
                        .HasColumnType("integer");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("StartedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("TotalQuantity")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DetailId");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("ProductionOrders");
                });

            modelBuilder.Entity("ProductionSystem.Models.RouteStage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("MachineId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int?>("OperationId")
                        .HasColumnType("integer");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("PlannedEndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("PlannedStartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("PlannedTime")
                        .HasColumnType("decimal(8,4)");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<string>("StageNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("StageType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("SubBatchId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MachineId");

                    b.HasIndex("OperationId");

                    b.HasIndex("SubBatchId");

                    b.ToTable("RouteStages");
                });

            modelBuilder.Entity("ProductionSystem.Models.Shift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<TimeSpan?>("BreakEndTime")
                        .HasColumnType("interval");

                    b.Property<TimeSpan?>("BreakStartTime")
                        .HasColumnType("interval");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("interval");

                    b.Property<bool>("Friday")
                        .HasColumnType("boolean");

                    b.Property<bool>("Monday")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<bool>("Saturday")
                        .HasColumnType("boolean");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("interval");

                    b.Property<bool>("Sunday")
                        .HasColumnType("boolean");

                    b.Property<bool>("Thursday")
                        .HasColumnType("boolean");

                    b.Property<bool>("Tuesday")
                        .HasColumnType("boolean");

                    b.Property<bool>("Wednesday")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Shifts");
                });

            modelBuilder.Entity("ProductionSystem.Models.ShiftAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int>("MachineId")
                        .HasColumnType("integer");

                    b.Property<int>("ShiftId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MachineId");

                    b.HasIndex("ShiftId");

                    b.ToTable("ShiftAssignments");
                });

            modelBuilder.Entity("ProductionSystem.Models.StageExecution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("ActualTime")
                        .HasColumnType("decimal(8,4)");

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("MachineId")
                        .HasColumnType("integer");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("Operator")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal?>("PauseTime")
                        .HasColumnType("decimal(8,4)");

                    b.Property<DateTime?>("PausedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("ResumedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("RouteStageId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("StartedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("TimeExceededReason")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("Id");

                    b.HasIndex("MachineId");

                    b.HasIndex("RouteStageId");

                    b.ToTable("StageExecutions");
                });

            modelBuilder.Entity("ProductionSystem.Models.SubBatch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BatchNumber")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("ProductionOrderId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("StartedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("ProductionOrderId", "BatchNumber")
                        .IsUnique();

                    b.ToTable("SubBatches");
                });

            modelBuilder.Entity("ProductionSystem.Models.Changeover", b =>
                {
                    b.HasOne("ProductionSystem.Models.Detail", "FromDetail")
                        .WithMany()
                        .HasForeignKey("FromDetailId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProductionSystem.Models.Machine", "Machine")
                        .WithMany("ChangeoversPrev")
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProductionSystem.Models.Machine", null)
                        .WithMany("ChangeoversNext")
                        .HasForeignKey("MachineId1");

                    b.HasOne("ProductionSystem.Models.Detail", "ToDetail")
                        .WithMany()
                        .HasForeignKey("ToDetailId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FromDetail");

                    b.Navigation("Machine");

                    b.Navigation("ToDetail");
                });

            modelBuilder.Entity("ProductionSystem.Models.ExecutionLog", b =>
                {
                    b.HasOne("ProductionSystem.Models.StageExecution", "StageExecution")
                        .WithMany("ExecutionLogs")
                        .HasForeignKey("StageExecutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StageExecution");
                });

            modelBuilder.Entity("ProductionSystem.Models.Machine", b =>
                {
                    b.HasOne("ProductionSystem.Models.MachineType", "MachineType")
                        .WithMany("Machines")
                        .HasForeignKey("MachineTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MachineType");
                });

            modelBuilder.Entity("ProductionSystem.Models.Operation", b =>
                {
                    b.HasOne("ProductionSystem.Models.Detail", "Detail")
                        .WithMany("Operations")
                        .HasForeignKey("DetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProductionSystem.Models.MachineType", "MachineType")
                        .WithMany("Operations")
                        .HasForeignKey("MachineTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Detail");

                    b.Navigation("MachineType");
                });

            modelBuilder.Entity("ProductionSystem.Models.ProductionOrder", b =>
                {
                    b.HasOne("ProductionSystem.Models.Detail", "Detail")
                        .WithMany("ProductionOrders")
                        .HasForeignKey("DetailId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Detail");
                });

            modelBuilder.Entity("ProductionSystem.Models.RouteStage", b =>
                {
                    b.HasOne("ProductionSystem.Models.Machine", "Machine")
                        .WithMany("RouteStages")
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ProductionSystem.Models.Operation", "Operation")
                        .WithMany("RouteStages")
                        .HasForeignKey("OperationId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ProductionSystem.Models.SubBatch", "SubBatch")
                        .WithMany("RouteStages")
                        .HasForeignKey("SubBatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Machine");

                    b.Navigation("Operation");

                    b.Navigation("SubBatch");
                });

            modelBuilder.Entity("ProductionSystem.Models.ShiftAssignment", b =>
                {
                    b.HasOne("ProductionSystem.Models.Machine", "Machine")
                        .WithMany()
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProductionSystem.Models.Shift", "Shift")
                        .WithMany("ShiftAssignments")
                        .HasForeignKey("ShiftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Machine");

                    b.Navigation("Shift");
                });

            modelBuilder.Entity("ProductionSystem.Models.StageExecution", b =>
                {
                    b.HasOne("ProductionSystem.Models.Machine", "Machine")
                        .WithMany("StageExecutions")
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ProductionSystem.Models.RouteStage", "RouteStage")
                        .WithMany("StageExecutions")
                        .HasForeignKey("RouteStageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Machine");

                    b.Navigation("RouteStage");
                });

            modelBuilder.Entity("ProductionSystem.Models.SubBatch", b =>
                {
                    b.HasOne("ProductionSystem.Models.ProductionOrder", "ProductionOrder")
                        .WithMany("SubBatches")
                        .HasForeignKey("ProductionOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductionOrder");
                });

            modelBuilder.Entity("ProductionSystem.Models.Detail", b =>
                {
                    b.Navigation("Operations");

                    b.Navigation("ProductionOrders");
                });

            modelBuilder.Entity("ProductionSystem.Models.Machine", b =>
                {
                    b.Navigation("ChangeoversNext");

                    b.Navigation("ChangeoversPrev");

                    b.Navigation("RouteStages");

                    b.Navigation("StageExecutions");
                });

            modelBuilder.Entity("ProductionSystem.Models.MachineType", b =>
                {
                    b.Navigation("Machines");

                    b.Navigation("Operations");
                });

            modelBuilder.Entity("ProductionSystem.Models.Operation", b =>
                {
                    b.Navigation("RouteStages");
                });

            modelBuilder.Entity("ProductionSystem.Models.ProductionOrder", b =>
                {
                    b.Navigation("SubBatches");
                });

            modelBuilder.Entity("ProductionSystem.Models.RouteStage", b =>
                {
                    b.Navigation("StageExecutions");
                });

            modelBuilder.Entity("ProductionSystem.Models.Shift", b =>
                {
                    b.Navigation("ShiftAssignments");
                });

            modelBuilder.Entity("ProductionSystem.Models.StageExecution", b =>
                {
                    b.Navigation("ExecutionLogs");
                });

            modelBuilder.Entity("ProductionSystem.Models.SubBatch", b =>
                {
                    b.Navigation("RouteStages");
                });
#pragma warning restore 612, 618
        }
    }
}
